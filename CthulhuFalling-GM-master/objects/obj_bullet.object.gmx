<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_dangerousObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init variables and move
hmotion = 6;
dir = obj_player.facing;
damage = 50;

// Give the bullet some angle based on mouse distance (the higher the distance, the higher the angle)
var dist_from_mouse = point_distance(x, y, mouse_x, mouse_y);
var max_distance = 1000;
var percent = dist_from_mouse / max_distance;
var even_or_odd = irandom(1);
var error;

// Create square around crosshair
var s_w = percent * 10;
var s_h = percent * 10;
var s_x = mouse_x - s_w / 2;
var s_y = mouse_y - s_h / 2;

var point_x = random_range(s_x, s_x + s_w);
var point_y = random_range(s_y, s_y + s_h);

//show_message("Crosshair: (" + string(mouse_x) + ", " + string(mouse_y) + "), Point: (" + string(point_x) + ", " + string(point_y) + ")");

// Rotate sprite towards mouse click point
image_angle = point_direction(x, y, point_x, point_y) - 180;

// Move
move_towards_point(point_x, point_y, 18); 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle collision with enemies
// Bullet motion based on hsp (player)
//x += (hmotion * dir);

// Handle collision with enemies
if (place_meeting(x, y, obj_enemy)) {
   // TODO: Add enemy hp
   // Kill enemy
   //with instance_place(x, y, obj_enemy) {
        // Decrease enemy hp
        //hp -= damage;
   //}
   target_enemy = instance_place(x, y, obj_enemy);
   
   if (target_enemy.can_take_damage) {
       target_enemy.hp -= damage;
   }
   
   // Self destroy
   instance_destroy();
}

// Handle collision with bonus
if (place_meeting(x, y, obj_bonus)) {
   // TODO: Add enemy hp
   // Kill enemy
   with instance_place(x, y, obj_bonus) {
        // Destroy enemy instance
        instance_destroy();
   }
   
   // Self destroy
   instance_destroy();
}

if (place_meeting(x, y, obj_environmentItem)) {
   // TODO: Check if this item is destroyable
   // Create glare
   instance_create(x, y, obj_psBulletImpact);
   instance_destroy();
}

// Handle offscreen
// TODO: Add check for vertical bounds
var can_destroy = (x &gt; room_width or x &lt; 0);

if (can_destroy) {
   instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
